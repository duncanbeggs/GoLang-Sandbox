//Writing a custom implementation of a binary tree
//All in one file for now. Will break out to multiple files after figuring out how to do so.
package main

import (
	"fmt"
	"time"
)

func printWelcome() {
	fmt.Println("***-Welcome to Duncan's Binary Tree!!-***")
	fmt.Println("     *    *    ")
	fmt.Println("*  * *   *   * ")
	fmt.Println("**  **  ** **  ")
	fmt.Println("  * *    **    ")
	fmt.Println("  **    *   *  ")
	fmt.Println("  **   **   ** ")
	fmt.Println("    **  *  **  ")
	fmt.Println(" **  ** ***    ")
	fmt.Println("   **** **     ")
	fmt.Println("     ****      ")
	fmt.Println("     ****      ")
	fmt.Println("     ****      ")
	fmt.Print("New Tree Instatiating")
	time.Sleep(300 * time.Millisecond)
	fmt.Print(".")
	time.Sleep(20 * time.Millisecond)
	fmt.Print("..")
	time.Sleep(180 * time.Millisecond)
	fmt.Print(".")
	time.Sleep(100 * time.Millisecond)
	fmt.Print(".")
	time.Sleep(120 * time.Millisecond)
	fmt.Print(".")
	time.Sleep(160 * time.Millisecond)
	fmt.Print(".")
	time.Sleep(80 * time.Millisecond)
	fmt.Print(".")
	time.Sleep(400 * time.Millisecond)
	fmt.Print("..")
	time.Sleep(260 * time.Millisecond)
	fmt.Print(".")
	time.Sleep(50 * time.Millisecond)
	fmt.Print(".")
	time.Sleep(190 * time.Millisecond)
	fmt.Print(".")
	time.Sleep(400 * time.Millisecond)
	fmt.Print(".")
	time.Sleep(700 * time.Millisecond)
	fmt.Print("..")
	time.Sleep(50 * time.Millisecond)
	fmt.Print(".")
	time.Sleep(250 * time.Millisecond)
	fmt.Print("...")
	time.Sleep(150 * time.Millisecond)
	fmt.Print(".....\n")
	time.Sleep(250 * time.Millisecond)
}
